{"version":3,"names":[],"mappings":"","sources":["index.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _vue = require('./vue.js');\n\nvar _master = require('./master.js');\n\nvar _patrickTexts = require('./patrick-texts.js');\n\n_master.Master.slowlyApplyToTexts({\n  texts: _patrickTexts.texts,\n  onBeginWait: console.log,\n  onBeginTyping: function onBeginTyping(text) {\n    _vue.app.setRobotIsTyping(true);\n  },\n  onEndTyping: function onEndTyping(text) {\n    _vue.app.setRobotIsTyping(false);\n    _vue.app.addMessage(_.extend(text, { fromUser: false, lastSeen: false }));\n  },\n  onEndOfTexts: console.log\n});\n\n},{\"./master.js\":2,\"./patrick-texts.js\":3,\"./vue.js\":4}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Master = exports.Master = {};\n// text Model\n// text = {\n//  text : ''\n// }\n\nvar waitTime = function waitTime(_ref) {\n  var text = _ref.text,\n      _ref$waitTime = _ref.waitTime,\n      waitTime = _ref$waitTime === undefined ? null : _ref$waitTime;\n  return waitTime ? waitTime * 1000 : Math.random() * 5 * 1000;\n};\nvar typingTime = function typingTime(_ref2) {\n  var text = _ref2.text,\n      _ref2$typingTime = _ref2.typingTime,\n      typingTime = _ref2$typingTime === undefined ? null : _ref2$typingTime;\n  return typingTime ? typingTime * 1000 : (text.length + 20 * Math.random()) / 8 * 1000;\n};\n\nMaster.slowlyApplyToTexts = function (_ref3) {\n  var texts = _ref3.texts,\n      onBeginWait = _ref3.onBeginWait,\n      onBeginTyping = _ref3.onBeginTyping,\n      onEndTyping = _ref3.onEndTyping,\n      onEndOfTexts = _ref3.onEndOfTexts;\n\n  function processNextText() {\n    if (!_.isEmpty(texts)) return processText(texts.shift());\n    onEndOfTexts();\n  }\n\n  function processText(text) {\n    var endOfProcessing = function endOfProcessing() {\n      onEndTyping(text);\n      processNextText();\n    };\n\n    var startTyping = function startTyping() {\n      onBeginTyping(text);\n      setTimeout(endOfProcessing, typingTime(text));\n    };\n\n    var startWaiting = function startWaiting() {\n      onBeginWait(text);\n      setTimeout(startTyping, waitTime(text));\n    };\n\n    startWaiting();\n  }\n\n  processNextText();\n};\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar texts = exports.texts = [{\n  text: 'salut'\n}, {\n  text: '__input__1'\n}, {\n  text: 'dis moi'\n}, {\n  text: \"j'ai rien a ecouter la\"\n}, {\n  text: \"tu m'avais parle d'un groupe\"\n}, {\n  text: \"c'etait quoi deja ?\"\n}, {\n  text: '__input__2'\n}, {\n  text: 'Hm ha oui.'\n}, {\n  text: \"C'est cool.\"\n}, {\n  text: 'ca va toi sinon ? depuis la derniere fois ...mes conseils ont été utiles ?'\n}, {\n  text: 'en vrai'\n}, {\n  text: \"j'ai vu les photos sur facebook... t'avais l'air en forme dessus. ca m'a fait plaisir.\"\n}, {\n  text: ';)'\n}, {\n  text: 'enfin. je connais ces moments tsais'\n}, {\n  text: 'dur de communiquer'\n}, {\n  text: 'ds le brouillard'\n}, {\n  text: 'peurs irrationnelles'\n}, {\n  text: 'bref.'\n}, {\n  text: \"d'ailleurs\"\n}, {\n  text: \"t'as pas 2 minutes la ? J'ai besoin de ton avis sur un truc un peu perso\"\n}, {\n  text: '__input__3'\n}, {\n  text: 'cool merci. je te fais confiance pour garder ca pour toi hein.'\n}, {\n  text: \"d'ailleurs\"\n}];\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nVue.component('message-groups-iterator', {\n  props: ['messageGroups'],\n  template: '\\n    <div>\\n      <message-group-dispatcher\\n        v-for=\"messageGroup in messageGroups\"\\n        v-bind:messageGroup=\"messageGroup\"\\n      >\\n      </message-group-dispatcher>\\n    </div>\\n  '\n});\n\nVue.component('message-group-dispatcher', {\n  props: ['messageGroup'],\n  template: '\\n    <user-messages-container\\n      v-if=\"messageGroup.fromUser\"\\n      v-bind:userMessages=\"messageGroup.messages\"\\n    >\\n    </user-messages-container>\\n    <robot-messages-container\\n      v-else\\n      v-bind:robotMessages=\"messageGroup.messages\"\\n      v-bind:isTyping=\"messageGroup.isTyping\"\\n    >\\n    </robot-messages-container>\\n  '\n});\n\nVue.component('user-messages-container', {\n  props: ['userMessages'],\n  template: '\\n    <div class=\"_1t_p clearfix\">\\n      <div class=\"_41ud\">\\n        <h5 class=\"_ih3 _-ne\">\\n          <span class=\"_3oh-\">Micka\\xEBl</span>\\n        </h5>\\n        <user-message \\n          v-for=\"message in userMessages\" \\n          v-bind:message=\"message\"\\n        >\\n        </user-message>\\n      </div>\\n    </div>\\n  '\n});\n\nVue.component('user-message', {\n  props: ['message'],\n  template: '\\n    <div class=\"clearfix _o46 _3erg _3i_m _nd_ direction_ltr text_align_ltr\">\\n      <div class=\"_3058 _ui9 _hh7 _s1- _52mr _43by _3oh-\" id=\"js_1zj\">\\n        <div class=\"_aok\">\\n          <span class=\"_3oh- _58nk\">{{ message.text }}</span>\\n        </div>\\n      </div>\\n      <span class=\"_40fu\"><span class=\"_2u_d\"></span></span>\\n      <last-seen-message-by-robot v-if=\"message.lastSeen\">\\n      </last-seen-message-by-robot>\\n    </div>\\n  '\n});\n\nVue.component('robot-messages-container', {\n  props: ['robotMessages', 'isTyping'],\n  template: '\\n    <div class=\"_1t_p clearfix\">\\n      <div class=\"_1t_q\">\\n        <div class=\"_4ldz _1t_r\" data-tooltip-content=\"Patrick Bateman 4:35pm\" data-hover=\"tooltip\" data-tooltip-position=\"left\" style=\"width: 32px; height: 32px;\">\\n          <div class=\"_4ld-\" style=\"width: 32px; height: 32px;\">\\n            <img alt=\"Patrick Bateman\" src=\"./Messenger_files/17499392_1651165904924361_806913937995688309_n.png\" height=\"32\" width=\"32\" class=\"img\">\\n          </div>\\n          <div class=\"_4ld_ _2pom\">\\n            <div class=\"_2pon _2poo\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\"_41ud\">\\n        <h5 class=\"_ih3 _-ne\"><span class=\"_3oh-\">Patrick Bateman</span>\\n        </h5>\\n        <div class=\"clearfix _o46 _3erg _29_7 direction_ltr text_align_ltr\">\\n          <template v-for=\"message in robotMessages\">\\n            <robot-message v-bind:message=\"message\" >\\n            </robot-message>\\n            <span class=\"_40fu\"><span class=\"_2u_d\"></span></span>\\n            <last-seen-message-by-robot v-if=\"message.lastSeen\">\\n            </last-seen-message-by-robot>\\n          </template>\\n          <robot-is-typing-indicator \\n            v-if=\"isTyping\"\\n          >\\n          </robot-is-typing-indicator>\\n        </div>\\n      </div>\\n    </div>\\n  '\n});\n\nVue.component('robot-message', {\n  props: ['message'],\n  template: '\\n    <div class=\"_3058 _ui9 _hh7 _s1- _52mr _3oh-\">\\n      <div class=\"_aok\">\\n        <span class=\"_3oh- _58nk\">{{ message.text }}</span>\\n      </div>\\n    </div>\\n  '\n});\n\nVue.component('robot-is-typing-indicator', {\n  template: '\\n    <div class=\\'jsm-chat-message jsm-left jsm-typing-indicator\\' style=\\'margin-left: 0px;\\'>\\n      <span class=\\'no-wrap-space\\'></span><span class=\\'no-wrap-space\\'></span><span class=\\'no-wrap-space\\'></span>\\n    </div>\\n  '\n});\n\nVue.component('last-seen-message-by-robot', {\n  template: '<span class=\"_4jzq _jf4 _jf5\"><img alt=\"Seen by Patrick Bateman at 4:35pm\" class=\"_jf2 img\" src=\"./Messenger_files/17499392_1651165904924361_806913937995688309_n.png\" title=\"Seen by Patrick\"></span>'\n});\n\nvar app = exports.app = new Vue({\n  el: '#js_1',\n\n  template: '\\n    <div>\\n      <h4 class=\"_497p _2lpt\">\\n        <time class=\"_3oh-\"><span id=\\'time\\'>{{now}}</span></time>\\n      </h4>\\n      <message-groups-iterator v-bind:messageGroups=\"messageGroups\"\\n        v-bind:robotIsTyping=\"robotIsTyping\"\\n      >\\n      </message-groups-iterator >\\n    </div>\\n  ',\n\n  data: {\n    robotIsTyping: false,\n\n    messages: [{ text: 'coucou ?', fromUser: true, lastSeen: true }]\n  },\n\n  methods: {\n    addMessage: function addMessage(message) {\n      this.messages.push(message);\n    },\n    setRobotIsTyping: function setRobotIsTyping(robotIsTyping) {\n      this.robotIsTyping = robotIsTyping;\n    }\n  },\n\n  computed: {\n    'now': function now() {\n      var date = new Date();\n      return date.getHours() + ':' + date.getMinutes();\n    },\n\n\n    /**\n     * Group messages in a way we can construct\n     * the chat interface\n     * and add relevant metadata\n     */\n    'messageGroups': function messageGroups() {\n      var messageGroups = [];\n\n      _.forEach(this.messages, function (message, key, messages) {\n        var lastMessageGroup = _.last(messageGroups);\n        var shouldCreateNewGroup = _.isEmpty(lastMessageGroup) || lastMessageGroup.fromUser !== message.fromUser;\n\n        if (shouldCreateNewGroup) {\n          var newMessageGroup = {\n            messages: [message],\n            fromUser: message.fromUser\n          };\n\n          messageGroups.push(newMessageGroup);\n          return;\n        }\n\n        lastMessageGroup.messages.push(message);\n      });\n\n      // Adding typing indicator if necessary\n      var lastMessageGroup = _.last(messageGroups);\n      var shouldCreateNewRobotGroup = _.isEmpty(lastMessageGroup) || lastMessageGroup.fromUser;\n\n      if (shouldCreateNewRobotGroup) {\n        var newRobotMessageGroup = {\n          messages: [],\n          fromUser: false,\n          isTyping: this.robotIsTyping\n        };\n\n        messageGroups.push(newRobotMessageGroup);\n\n        return messageGroups;\n      }\n\n      lastMessageGroup.isTyping = this.robotIsTyping;\n\n      return messageGroups;\n    }\n  }\n});\n\n// For info\nvar messengerContentEditableInput = '\\n  <div class=\"_5rp7 _5rp8\">\\n    <div class=\"_1p1t\">\\n      <div class=\"_1p1v\" id=\"placeholder-9igde\">\\n      Type a message...</div>\\n    </div>\\n    <div class=\"_5rpb\">\\n      <div aria-autocomplete=\"list\" aria-describedby=\"placeholder-9igde\" aria-expanded=\"false\" aria-haspopup=\"false\" aria-label=\"Type a message...\" aria-owns=\"js_1yt\" class=\"_5rpu\" contenteditable=\"true\" data-interaction-root-id=\"_c1m\" role=\"combobox\" spellcheck=\"true\" tabindex=\"0\" style=\"outline: none; white-space: pre-wrap; word-wrap: break-word;\">\\n      </div>\\n    </div>\\n  </div>\\n';\n\nvar inputApp = exports.inputApp = new Vue({\n  el: '#inputBlock',\n\n  data: {\n    newMessageText: ''\n  },\n\n  // template: messengerContentEditableInput,\n  template: '\\n    <div class=\"_5rp7 _5rp8\">\\n      <input\\n        autofocus\\n        placeholder=\"Type a message...\" \\n        v-model=\"newMessageText\"\\n        @keyup.enter=\"sendNewMessage\"\\n      >\\n    </div>\\n  ',\n\n  methods: {\n    sendNewMessage: function sendNewMessage() {\n      app.messages.push({ text: this.newMessageText, fromUser: true });\n      this.newMessageText = '';\n    }\n  }\n});\n\n},{}]},{},[1])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"file":"../index.js"}